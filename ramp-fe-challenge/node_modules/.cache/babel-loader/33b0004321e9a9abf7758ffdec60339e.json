{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ianta\\\\Downloads\\\\ramp-fe-challenge\\\\ramp-fe-challenge\\\\src\\\\components\\\\Transactions\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback } from \"react\";\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\";\nimport { TransactionPane } from \"./TransactionPane\";\nimport { data } from \"../../utils/requests\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Transactions = _ref => {\n  _s();\n\n  let {\n    transactions\n  } = _ref;\n  const {\n    fetchWithoutCache,\n    loading\n  } = useCustomFetch();\n\n  const setTransactionApprovalFetch = (transactionId, value) => {\n    const transaction = data.transactions.find(currentTransaction => currentTransaction.id === transactionId);\n\n    if (!transaction) {\n      throw new Error(\"Invalid transaction to approve\");\n    }\n\n    transaction.approved = value;\n    console.log(\"transPane \" + transactionId);\n    console.log(\"transPane approved \" + transaction.approved);\n  };\n\n  const setTransactionApproval = useCallback(async _ref2 => {\n    let {\n      transactionId,\n      newValue\n    } = _ref2;\n    await fetchWithoutCache(\"setTransactionApproval\", {\n      transactionId,\n      value: newValue\n    });\n    console.log(newValue);\n    setTransactionApprovalFetch(transactionId, newValue);\n  }, [fetchWithoutCache]);\n\n  if (transactions === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampLoading--container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  } // console.log(transactions);\n  // console.log(setTransactionApproval);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"transaction-container\",\n    children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(TransactionPane, {\n      transaction: transaction,\n      loading: loading,\n      setTransactionApproval: setTransactionApproval\n    }, transaction.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transactions, \"3TeCR/OJhEdaHp00JQf6jBdD3oc=\", false, function () {\n  return [useCustomFetch];\n});\n\n_c = Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["useCallback","useCustomFetch","TransactionPane","data","Transactions","transactions","fetchWithoutCache","loading","setTransactionApprovalFetch","transactionId","value","transaction","find","currentTransaction","id","Error","approved","console","log","setTransactionApproval","newValue","map"],"sources":["C:/Users/ianta/Downloads/ramp-fe-challenge/ramp-fe-challenge/src/components/Transactions/index.tsx"],"sourcesContent":["import { useCallback } from \"react\"\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\"\nimport { SetTransactionApprovalParams } from \"src/utils/types\"\nimport { TransactionPane } from \"./TransactionPane\"\nimport { SetTransactionApprovalFunction, TransactionsComponent } from \"./types\"\nimport {setTransactionApproval, data} from \"../../utils/requests\"\n\n\nexport const Transactions: TransactionsComponent = ({ transactions }) => {\n  const { fetchWithoutCache, loading } = useCustomFetch()\n\n  const setTransactionApprovalFetch = ( transactionId: string, value: boolean )  => {\n    const transaction = data.transactions.find(\n      (currentTransaction) => currentTransaction.id === transactionId\n    )\n    if (!transaction) {\n      throw new Error(\"Invalid transaction to approve\")\n    }\n    transaction.approved = value\n    console.log(\"transPane \" + (transactionId))\n    console.log(\"transPane approved \" + (transaction.approved))\n  }\n\n  const setTransactionApproval = useCallback<SetTransactionApprovalFunction>(\n    async ({ transactionId, newValue }) => {\n      await fetchWithoutCache<void, SetTransactionApprovalParams>(\"setTransactionApproval\", {\n        transactionId,\n        value: newValue,\n      })\n      console.log(newValue)\n      setTransactionApprovalFetch(transactionId, newValue);\n\n    },\n    [fetchWithoutCache]\n  )\n\n  if (transactions === null) {\n    return <div className=\"RampLoading--container\">Loading...</div>\n  }\n  // console.log(transactions);\n  // console.log(setTransactionApproval);\n\n  return (\n    <div data-testid=\"transaction-container\">\n      {transactions.map((transaction) => (\n        <TransactionPane\n          key={transaction.id}\n          transaction={transaction}\n          loading={loading}\n          setTransactionApproval={setTransactionApproval}\n        />\n      ))}\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,SAAgCC,IAAhC,QAA2C,sBAA3C;;AAGA,OAAO,MAAMC,YAAmC,GAAG,QAAsB;EAAA;;EAAA,IAArB;IAAEC;EAAF,CAAqB;EACvE,MAAM;IAAEC,iBAAF;IAAqBC;EAArB,IAAiCN,cAAc,EAArD;;EAEA,MAAMO,2BAA2B,GAAG,CAAEC,aAAF,EAAyBC,KAAzB,KAA8C;IAChF,MAAMC,WAAW,GAAGR,IAAI,CAACE,YAAL,CAAkBO,IAAlB,CACjBC,kBAAD,IAAwBA,kBAAkB,CAACC,EAAnB,KAA0BL,aADhC,CAApB;;IAGA,IAAI,CAACE,WAAL,EAAkB;MAChB,MAAM,IAAII,KAAJ,CAAU,gCAAV,CAAN;IACD;;IACDJ,WAAW,CAACK,QAAZ,GAAuBN,KAAvB;IACAO,OAAO,CAACC,GAAR,CAAY,eAAgBT,aAA5B;IACAQ,OAAO,CAACC,GAAR,CAAY,wBAAyBP,WAAW,CAACK,QAAjD;EACD,CAVD;;EAYA,MAAMG,sBAAsB,GAAGnB,WAAW,CACxC,eAAuC;IAAA,IAAhC;MAAES,aAAF;MAAiBW;IAAjB,CAAgC;IACrC,MAAMd,iBAAiB,CAAqC,wBAArC,EAA+D;MACpFG,aADoF;MAEpFC,KAAK,EAAEU;IAF6E,CAA/D,CAAvB;IAIAH,OAAO,CAACC,GAAR,CAAYE,QAAZ;IACAZ,2BAA2B,CAACC,aAAD,EAAgBW,QAAhB,CAA3B;EAED,CATuC,EAUxC,CAACd,iBAAD,CAVwC,CAA1C;;EAaA,IAAID,YAAY,KAAK,IAArB,EAA2B;IACzB,oBAAO;MAAK,SAAS,EAAC,wBAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CA9BsE,CA+BvE;EACA;;;EAEA,oBACE;IAAK,eAAY,uBAAjB;IAAA,UACGA,YAAY,CAACgB,GAAb,CAAkBV,WAAD,iBAChB,QAAC,eAAD;MAEE,WAAW,EAAEA,WAFf;MAGE,OAAO,EAAEJ,OAHX;MAIE,sBAAsB,EAAEY;IAJ1B,GACOR,WAAW,CAACG,EADnB;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CA9CM;;GAAMV,Y;UAC4BH,c;;;KAD5BG,Y"},"metadata":{},"sourceType":"module"}